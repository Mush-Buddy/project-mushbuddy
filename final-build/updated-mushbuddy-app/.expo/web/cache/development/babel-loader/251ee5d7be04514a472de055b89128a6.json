{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { SearchBar } from 'react-native-elements';\nimport styles from \"./stylesheets/catalog_style.js\";\nimport catalogData from \"../assets/mushroomDict.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Catalog = function (_Component) {\n  _inherits(Catalog, _Component);\n\n  var _super = _createSuper(Catalog);\n\n  function Catalog(props) {\n    var _this;\n\n    _classCallCheck(this, Catalog);\n\n    _this = _super.call(this, props);\n\n    _this.updateSearch = function (searchText) {\n      var formattedSearch = searchText.toLowerCase();\n\n      _this.setState({\n        query: formattedSearch\n      });\n    };\n\n    _this.renderSearchBar = function () {\n      return _jsx(View, {\n        style: styles.searchBarContainer,\n        children: _jsx(SearchBar, {\n          placeholder: \"Search here...\",\n          onChangeText: _this.updateSearch,\n          value: _this.state.query,\n          lightTheme: true\n        })\n      });\n    };\n\n    _this.renderCatalogImage = function (photo) {\n      return _jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          source: photo,\n          style: styles.image\n        })\n      });\n    };\n\n    _this.renderCatalogImageWithURL = function (link) {\n      return _jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          source: {\n            uri: link\n          },\n          style: styles.image\n        })\n      });\n    };\n\n    _this.renderCatalogInfo = function (name, scientificName, description) {\n      return _jsxs(View, {\n        style: styles.infoContainer,\n        children: [_jsxs(View, {\n          style: styles.headerLine,\n          children: [_jsx(Text, {\n            style: styles.headerText,\n            children: name\n          }), _jsxs(Text, {\n            style: styles.italicizedHeaderText,\n            children: [\"(\", scientificName, \")\"]\n          })]\n        }), _jsx(Text, {\n          numberOfLines: 2,\n          ellipsizeMode: \"tail\",\n          style: styles.descriptionText,\n          children: description\n        })]\n      });\n    };\n\n    _this.renderCatalogEntry = function (entry) {\n      return _jsxs(View, {\n        style: styles.catalogEntryContainer,\n        children: [_this.renderCatalogImageWithURL(entry.images), _this.renderCatalogInfo(entry.nameCommon, entry.nameScientific, entry.description)]\n      });\n    };\n\n    _this.onPressFilter = function () {\n      console.log(\"Attempting to filter\");\n    };\n\n    _this.renderFilterButton = function () {\n      return _jsx(TouchableOpacity, {\n        style: styles.filterPress,\n        onPress: _this.onPressFilter,\n        children: _jsx(Text, {\n          children: \"Filter\"\n        })\n      });\n    };\n\n    _this.state = {\n      query: ''\n    };\n    _this.updateSearch = _this.updateSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Catalog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(SafeAreaView, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.topNavigation,\n          children: this.renderFilterButton()\n        }), _jsx(FlatList, {\n          data: catalogData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _this2.renderCatalogEntry(item);\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index;\n          },\n          ItemSeparatorComponent: function ItemSeparatorComponent() {\n            return _jsx(View, {\n              style: {\n                marginLeft: 17.5,\n                width: '90%',\n                height: 0.5,\n                backgroundColor: '#222222'\n              }\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Catalog;\n}(Component);\n\nexport default Catalog;","map":{"version":3,"sources":["/Users/bibaswankhadka/CS98/project-mushbuddy/mushbuddy-app/components/catalog.js"],"names":["React","Component","SearchBar","styles","catalogData","Catalog","props","updateSearch","searchText","formattedSearch","toLowerCase","setState","query","renderSearchBar","searchBarContainer","state","renderCatalogImage","photo","imageContainer","image","renderCatalogImageWithURL","link","uri","renderCatalogInfo","name","scientificName","description","infoContainer","headerLine","headerText","italicizedHeaderText","descriptionText","renderCatalogEntry","entry","catalogEntryContainer","images","nameCommon","nameScientific","onPressFilter","console","log","renderFilterButton","filterPress","bind","container","topNavigation","item","index","marginLeft","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, Image, SafeAreaView, ScrollView, TouchableOpacity, FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\n\nimport styles from './stylesheets/catalog_style.js';\n\n// import SamplePhoto1 from '../assets/profile_assets/mushrooms/king_bolete.png';\n// import SamplePhoto2 from '../assets/profile_assets/mushrooms/chanterelle.png';\n// import SamplePhoto3 from '../assets/profile_assets/mushrooms/morel.jpeg';\n\nimport catalogData from '../assets/mushroomDict.json';\n\nclass Catalog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n        };\n        this.updateSearch = this.updateSearch.bind(this);\n    }\n\n    // not currently in use ---\n\n    updateSearch = (searchText) => {\n        const formattedSearch = searchText.toLowerCase();\n        this.setState({ query: formattedSearch });\n    };\n\n    renderSearchBar = () => {\n        return (\n            <View style={styles.searchBarContainer}>\n                <SearchBar\n                    placeholder=\"Search here...\"\n                    onChangeText={this.updateSearch}\n                    value={this.state.query}\n                    lightTheme={true}\n                />\n            </View>\n        );\n    };\n\n    // -----\n\n    renderCatalogImage = (photo) => {\n        return (\n            <View style={styles.imageContainer}>\n                <Image\n                    source={photo}\n                    style={styles.image}\n                />\n            </View>\n        );\n    }\n\n    renderCatalogImageWithURL = (link) => {\n        return (\n            <View style={styles.imageContainer}>\n                <Image\n                    source={{uri: link}}\n                    style={styles.image}\n                />\n            </View>\n        );\n    }\n\n    renderCatalogInfo = (name, scientificName, description) => {\n        return (\n            <View style={styles.infoContainer}>\n                <View style={styles.headerLine}>\n                    <Text style={styles.headerText}>\n                        {name}\n                    </Text>\n                    <Text style={styles.italicizedHeaderText}>\n                        ({scientificName})\n                    </Text>\n                </View>\n                <Text numberOfLines={2} ellipsizeMode='tail' style={styles.descriptionText}>\n                    {description}\n                </Text>\n            </View>\n        );\n    }\n\n    // renderCatalogEntry = (name, scientificName, description, photo) => {\n    //     return (\n    //         <View style={styles.catalogEntryContainer}>\n    //             {this.renderCatalogImage(photo)}\n    //             {this.renderCatalogInfo(name, scientificName, description)}\n    //         </View>\n    //     );\n    // }\n\n    renderCatalogEntry = (entry) => {\n        return (\n            <View style={styles.catalogEntryContainer}>\n                {this.renderCatalogImageWithURL(entry.images)}\n                {this.renderCatalogInfo(entry.nameCommon, entry.nameScientific, entry.description)}\n            </View>\n        );\n    }\n\n    onPressFilter = () => {\n        console.log(\"Attempting to filter\");\n    }\n\n    renderFilterButton = () => {\n        return (\n            <TouchableOpacity\n                style={styles.filterPress}\n                onPress={this.onPressFilter}\n            >\n                <Text>Filter</Text>\n            </TouchableOpacity>\n        );\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.container}>\n                <View style={styles.topNavigation}>\n                    {this.renderFilterButton()}\n                </View>\n                {/* <ScrollView>\n                    {this.renderCatalogEntry(names[0], scientificNames[0], 'this is a sample description', photos[0])}\n                    {this.renderCatalogEntry(names[1], scientificNames[1], 'this is a sample description', photos[1])}\n                    {this.renderCatalogEntry(names[2], scientificNames[2], 'this is a sample description', photos[2])}\n                    {this.renderCatalogEntry(names[0], scientificNames[0], 'this is a sample description', photos[0])}\n                    {this.renderCatalogEntry(names[1], scientificNames[1], 'this is a sample description', photos[1])}\n                    {this.renderCatalogEntry(names[2], scientificNames[2], 'this is a sample description', photos[2])}\n                    {this.renderCatalogEntry(names[0], scientificNames[0], 'this is a sample description', photos[0])}\n                    {this.renderCatalogEntry(names[1], scientificNames[1], 'this is a sample description', photos[1])}\n                    {this.renderCatalogEntry(names[2], scientificNames[2], 'this is a sample description', photos[2])}\n                </ScrollView> */}\n                <FlatList\n                    data={catalogData}\n                    renderItem={({ item }) => { return this.renderCatalogEntry(item); }}\n                    keyExtractor={(item, index) => index}\n                    ItemSeparatorComponent={() => <View style={{ marginLeft: 17.5, width: '90%', height: 0.5, backgroundColor: '#222222'}} />}\n                />\n            </SafeAreaView>\n        );\n    }\n}\n\nexport default Catalog;\n"]},"metadata":{},"sourceType":"module"}