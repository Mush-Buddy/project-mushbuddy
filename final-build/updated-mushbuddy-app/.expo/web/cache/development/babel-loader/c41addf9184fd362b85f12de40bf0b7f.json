{"ast":null,"code":"import MainTabBar from \"./navigation/main_tab_bar\";\nimport Register from \"./navigation/register\";\nimport Index from \"./index\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport devToolsEnhancer from 'remote-redux-devtools';\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./redux/reducers/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk), devToolsEnhancer()));\n\nvar App = function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Index, {})\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/bibaswankhadka/CS98/project-mushbuddy/mushbuddy-app/App.js"],"names":["MainTabBar","Register","Index","Provider","createStore","applyMiddleware","composeWithDevTools","devToolsEnhancer","thunk","rootReducer","store","App"],"mappings":"AAAA,OAAOA,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP;;AAOA,IAAMC,KAAK,GAAGN,WAAW,CACvBK,WADuB,EAEvBH,mBAAmB,CAACD,eAAe,CAACG,KAAD,CAAhB,EAAyBD,gBAAgB,EAAzC,CAFI,CAAzB;;AAKA,IAAMI,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,KAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,cACE,KAAC,KAAD;AADF,IADF;AAMD,CAPD;;AAUA,eAAeC,GAAf","sourcesContent":["import MainTabBar from './navigation/main_tab_bar';\nimport Register from './navigation/register'\nimport Index from './index'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport devToolsEnhancer from 'remote-redux-devtools';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/index'\n\n// import { LogBox } from 'react-native';\n\n// disable really annoying in app warnings\n// LogBox.ignoreAllLogs();\n\nconst store = createStore(\n  rootReducer, \n  composeWithDevTools(applyMiddleware(thunk), devToolsEnhancer(),\n));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Index />\n    </Provider>\n  );\n  //return <MainTabBar />;\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}