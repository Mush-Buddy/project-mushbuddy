{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { BASE_URL } from \"./config.js\";\nexport var getDataAPI = function getDataAPI(url, token) {\n  var res;\n  return _regeneratorRuntime.async(function getDataAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL + \"/\" + url, {\n            headers: {\n              token: token\n            }\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postDataAPI = function postDataAPI(url, post, token) {\n  var res;\n  return _regeneratorRuntime.async(function postDataAPI$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(BASE_URL + \"/\" + url, post, {\n            headers: {\n              token: token\n            }\n          }));\n\n        case 2:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var putDataAPI = function putDataAPI(url, post, token) {\n  var res;\n  return _regeneratorRuntime.async(function putDataAPI$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.put(BASE_URL + \"/\" + url, post, {\n            headers: {\n              token: token\n            }\n          }));\n\n        case 2:\n          res = _context3.sent;\n          return _context3.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var patchDataAPI = function patchDataAPI(url, post, token) {\n  var res;\n  return _regeneratorRuntime.async(function patchDataAPI$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(axios.patch(BASE_URL + \"/\" + url, post, {\n            headers: {\n              token: token\n            }\n          }));\n\n        case 2:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteDataAPI = function deleteDataAPI(url, token) {\n  var res;\n  return _regeneratorRuntime.async(function deleteDataAPI$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(axios.delete(\"/\" + url, {\n            headers: {\n              token: token\n            }\n          }));\n\n        case 2:\n          res = _context5.sent;\n          return _context5.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/bibaswankhadka/CS98/project-mushbuddy/mushbuddy-app/utils/fetchData.js"],"names":["axios","BASE_URL","getDataAPI","url","token","get","headers","res","postDataAPI","post","putDataAPI","put","patchDataAPI","patch","deleteDataAPI","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJJ,KAAK,CAACK,GAAN,CAAaJ,QAAb,SAAyBE,GAAzB,EAAgC;AAC9CG,YAAAA,OAAO,EAAE;AAAEF,cAAAA,KAAK,EAAEA;AAAT;AADqC,WAAhC,CADI;;AAAA;AAChBG,UAAAA,GADgB;AAAA,2CAIfA,GAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOL,GAAP,EAAYM,IAAZ,EAAkBL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLJ,KAAK,CAACS,IAAN,CAAcR,QAAd,SAA0BE,GAA1B,EAAiCM,IAAjC,EAAuC;AACrDH,YAAAA,OAAO,EAAE;AAAEF,cAAAA,KAAK,EAAEA;AAAT;AAD4C,WAAvC,CADK;;AAAA;AACjBG,UAAAA,GADiB;AAAA,4CAIhBA,GAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAOP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAOP,GAAP,EAAYM,IAAZ,EAAkBL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJJ,KAAK,CAACW,GAAN,CAAaV,QAAb,SAAyBE,GAAzB,EAAgCM,IAAhC,EAAsC;AACpDH,YAAAA,OAAO,EAAE;AAAEF,cAAAA,KAAK,EAAEA;AAAT;AAD2C,WAAtC,CADI;;AAAA;AAChBG,UAAAA,GADgB;AAAA,4CAIfA,GAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAOT,GAAP,EAAYM,IAAZ,EAAkBL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNJ,KAAK,CAACa,KAAN,CAAeZ,QAAf,SAA2BE,GAA3B,EAAkCM,IAAlC,EAAwC;AACtDH,YAAAA,OAAO,EAAE;AAAEF,cAAAA,KAAK,EAAEA;AAAT;AAD6C,WAAxC,CADM;;AAAA;AAClBG,UAAAA,GADkB;AAAA,4CAIjBA,GAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAOP,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAOX,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPJ,KAAK,CAACe,MAAN,OAAiBZ,GAAjB,EAAwB;AACtCG,YAAAA,OAAO,EAAE;AAAEF,cAAAA,KAAK,EAAEA;AAAT;AAD6B,WAAxB,CADO;;AAAA;AACnBG,UAAAA,GADmB;AAAA,4CAIlBA,GAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import axios from 'axios'\nimport { BASE_URL } from './config.js'\n\nexport const getDataAPI = async (url, token) => {\n    const res = await axios.get(`${BASE_URL}/${url}`, {\n        headers: { token: token}\n    })\n    return res;\n}\n\nexport const postDataAPI = async (url, post, token) => {\n    const res = await axios.post(`${BASE_URL}/${url}`, post, {\n        headers: { token: token}\n    })\n    return res;\n}\n\nexport const putDataAPI = async (url, post, token) => {\n    const res = await axios.put(`${BASE_URL}/${url}`, post, {\n        headers: { token: token}\n    })\n    return res;\n}\n\nexport const patchDataAPI = async (url, post, token) => {\n    const res = await axios.patch(`${BASE_URL}/${url}`, post, {\n        headers: { token: token}\n    })\n    return res;\n}\n\nexport const deleteDataAPI = async (url, token) => {\n    const res = await axios.delete(`/${url}`, {\n        headers: { token: token}\n    })\n    return res;\n}"]},"metadata":{},"sourceType":"module"}