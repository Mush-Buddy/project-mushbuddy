{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { GLOBALTYPES } from \"./globalTypes\";\nimport { postDataAPI } from \"../../utils/fetchData\";\nexport var register = function register(data) {\n  return function _callee(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(data);\n            dispatch({\n              type: GLOBALTYPES.ALERT,\n              payload: {\n                loading: true\n              }\n            });\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(postDataAPI('auth/register', data));\n\n          case 5:\n            res = _context.sent;\n            console.log(res);\n            dispatch({\n              type: GLOBALTYPES.AUTH,\n              payload: {\n                user: res.data.newuser\n              }\n            });\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            dispatch({\n              type: GLOBALTYPES.ALERT,\n              payload: {\n                error: _context.t0.response.data.msg\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/bibaswankhadka/CS98/project-mushbuddy/mushbuddy-app/redux/actions/authAction.js"],"names":["GLOBALTYPES","postDataAPI","register","data","dispatch","console","log","type","ALERT","payload","loading","res","AUTH","user","newuser","error","response","msg"],"mappings":";AAAA,SAASA,WAAT;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,SAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,YAAAA,QAAQ,CAAC;AAACG,cAAAA,IAAI,EAAEP,WAAW,CAACQ,KAAnB;AAA0BC,cAAAA,OAAO,EAAE;AAACC,gBAAAA,OAAO,EAAE;AAAV;AAAnC,aAAD,CAAR;AAH0B;AAAA,6CAKRT,WAAW,CAAC,eAAD,EAAkBE,IAAlB,CALH;;AAAA;AAKpBQ,YAAAA,GALoB;AAM1BN,YAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAP,YAAAA,QAAQ,CAAC;AACLG,cAAAA,IAAI,EAAEP,WAAW,CAACY,IADb;AAELH,cAAAA,OAAO,EAAE;AACLI,gBAAAA,IAAI,EAAEF,GAAG,CAACR,IAAJ,CAASW;AADV;AAFJ,aAAD,CAAR;AAP0B;AAAA;;AAAA;AAAA;AAAA;AAc1BT,YAAAA,OAAO,CAACC,GAAR;AACAF,YAAAA,QAAQ,CAAC;AACLG,cAAAA,IAAI,EAAEP,WAAW,CAACQ,KADb;AAELC,cAAAA,OAAO,EAAE;AACLM,gBAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAab,IAAb,CAAkBc;AADpB;AAFJ,aAAD,CAAR;;AAf0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAjB","sourcesContent":["import { GLOBALTYPES } from './globalTypes'\nimport { postDataAPI } from '../../utils/fetchData'\n\nexport const register = (data) => async (dispatch) => {\n    try {\n        console.log(data)\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}})\n\n        const res = await postDataAPI('auth/register', data)\n        console.log(res)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                user: res.data.newuser\n            } \n        })\n    } catch (err) {\n        console.log(err)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}